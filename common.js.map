{"version":3,"sources":["webpack:///./src/app/shared/directives/VarDirective.ts","webpack:///./src/app/shared/directives/var-directive.module.ts","webpack:///./src/app/shared/services/user.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAA8E;AAK9E;IASE,sBAAoB,KAAuB,EAAU,WAA6B;QAA9D,UAAK,GAAL,KAAK,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAFlF,YAAO,GAAQ,EAAE,CAAC;IAEmE,CAAC;IAPtF,sBAAI,+BAAK;aAAT,UAAU,OAAY;YACpB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;YACtD,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;;;OAAA;IAMD,iCAAU,GAAV;QACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAChE,CAAC;IAZD;QADC,2DAAK,EAAE;;;6CAIP;IALU,YAAY;QAHxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;SACpB,CAAC;+EAU2B,8DAAgB,EAAuB,yDAAW;OATlE,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;ACLc;AACK;AACC;AAO7C;IAAA;IACA,CAAC;IADY,kBAAkB;QAL9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,YAAY,EAAE,CAAC,0DAAY,CAAC;YAC5B,OAAO,EAAE,CAAC,0DAAY,EAAE,4DAAY,CAAC;SACtC,CAAC;OACW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACmB;AAEE;AAE3B;AACF;AAIjC;IACE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,4BAAM,GAAN,UAAO,OAAO;QACZ,IAAM,MAAM,GAAG,IAAI,+DAAU,CAAC,EAAC,UAAU,EAAE,OAAO,EAAC,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,KAAG,qEAAW,CAAC,aAAe,EAAE,EAAC,MAAM,UAAC,CAAC,CAAC,IAAI,CACtF,0DAAG,CAAC,UAAC,KAA0B;YAC7B,OAAO,mDACF,KAAK,IACR,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,IAAU;oBACpC,OAAO,mDACF,IAAI,IACP,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAC9B,SAAS,EAAE,mCAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,oBAAoB,CAAC,EACxE,SAAS,EAAE,mCAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,oBAAoB,CAAC,IACxE;gBACJ,CAAC,CAAC,IACF;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,qEAAW,CAAC,aAAa,SAAI,EAAI,CAAC,CAAC;IACnE,CAAC;IAED,0CAAoB,GAApB,UAAqB,QAAgB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,qEAAW,CAAC,aAAa,SAAI,QAAQ,aAAU,CAAC,CAAC;IACpF,CAAC;IA7BU,WAAW;QADvB,gEAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;+EAEL,+DAAU;OADzB,WAAW,CA8BvB;IAAD,kBAAC;CAAA;AA9BuB","file":"common.js","sourcesContent":["import {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\n@Directive({\n  selector: '[ngVar]',\n})\nexport class VarDirective {\n  @Input()\n  set ngVar(context: any) {\n    this.context.$implicit = this.context.ngVar = context;\n    this.updateView();\n  }\n\n  context: any = {};\n\n  constructor(private vcRef: ViewContainerRef, private templateRef: TemplateRef<any>) {}\n\n  updateView() {\n    this.vcRef.clear();\n    this.vcRef.createEmbeddedView(this.templateRef, this.context);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {VarDirective} from './VarDirective';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [VarDirective],\n  exports: [VarDirective, CommonModule]\n})\nexport class VarDirectiveModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {User} from '../models/user';\nimport {environment} from '../../../environments/environment';\nimport {PagedResponse} from '../models/payload/pagedResponse';\nimport {map} from 'rxjs/operators';\nimport * as moment from 'moment';\nimport {Profile} from '../models/profile';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(filters) {\n    const params = new HttpParams({fromObject: filters});\n    return this.http.get<PagedResponse<User>>(`${environment.usersEndpoint}`, {params}).pipe(\n      map((users: PagedResponse<User>) => {\n        return {\n          ...users,\n          content: users.content.map((user: User) => {\n            return {\n              ...user,\n              role: user.role.name.substr(5),\n              createdAt: moment(new Date(user.createdAt)).format('DD-MM-YYYY - HH:mm'),\n              updatedAt: moment(new Date(user.updatedAt)).format('DD-MM-YYYY - HH:mm')\n            };\n          })\n        };\n      }),\n    );\n  }\n\n  getById(id: string) {\n    return this.http.get<User>(`${environment.usersEndpoint}/${id}`);\n  }\n\n  getProfileByUsername(username: string) {\n    return this.http.get<Profile>(`${environment.usersEndpoint}/${username}/profile`);\n  }\n}\n"],"sourceRoot":""}